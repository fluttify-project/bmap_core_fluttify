// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_core_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_core_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class BMKAddressComponent extends NSObject  {
  //region constants
  static const String name__ = 'BMKAddressComponent';

  
  //endregion

  //region creators
  static Future<BMKAddressComponent> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('ObjectFactory::createBMKAddressComponent');
    final object = BMKAddressComponent()..refId = refId..tag__ = 'bmap_core_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<BMKAddressComponent>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('ObjectFactory::create_batchBMKAddressComponent', {'length': length});
  
    final List<BMKAddressComponent> typedResult = resultBatch.map((result) => BMKAddressComponent()..refId = result..tag__ = 'bmap_core_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_country() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_country", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_province() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_province", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_city() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_city", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_district() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_district", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_town() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_town", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_streetName() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_streetName", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_streetNumber() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_streetNumber", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_adCode() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_adCode", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_countryCode() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_countryCode", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_direction() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_direction", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_distance() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_distance", {'refId': refId});
  
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_country(String country) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_country', {'refId': refId, "country": country});
  
  
  }
  
  Future<void> set_province(String province) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_province', {'refId': refId, "province": province});
  
  
  }
  
  Future<void> set_city(String city) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_city', {'refId': refId, "city": city});
  
  
  }
  
  Future<void> set_district(String district) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_district', {'refId': refId, "district": district});
  
  
  }
  
  Future<void> set_town(String town) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_town', {'refId': refId, "town": town});
  
  
  }
  
  Future<void> set_streetName(String streetName) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_streetName', {'refId': refId, "streetName": streetName});
  
  
  }
  
  Future<void> set_streetNumber(String streetNumber) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_streetNumber', {'refId': refId, "streetNumber": streetNumber});
  
  
  }
  
  Future<void> set_adCode(String adCode) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_adCode', {'refId': refId, "adCode": adCode});
  
  
  }
  
  Future<void> set_countryCode(String countryCode) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_countryCode', {'refId': refId, "countryCode": countryCode});
  
  
  }
  
  Future<void> set_direction(String direction) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_direction', {'refId': refId, "direction": direction});
  
  
  }
  
  Future<void> set_distance(String distance) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_distance', {'refId': refId, "distance": distance});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension BMKAddressComponent_Batch on List<BMKAddressComponent> {
  //region getters
  Future<List<String>> get_country_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_country_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_province_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_province_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_city_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_city_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_district_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_district_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_town_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_town_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_streetName_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_streetName_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_streetNumber_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_streetNumber_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_adCode_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_adCode_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_countryCode_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_countryCode_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_direction_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_direction_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_distance_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod("BMKAddressComponent::get_distance_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_country_batch(List<String> country) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_country_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "country": country[__i__]}]);
  
  
  }
  
  Future<void> set_province_batch(List<String> province) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_province_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "province": province[__i__]}]);
  
  
  }
  
  Future<void> set_city_batch(List<String> city) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_city_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "city": city[__i__]}]);
  
  
  }
  
  Future<void> set_district_batch(List<String> district) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_district_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "district": district[__i__]}]);
  
  
  }
  
  Future<void> set_town_batch(List<String> town) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_town_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "town": town[__i__]}]);
  
  
  }
  
  Future<void> set_streetName_batch(List<String> streetName) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_streetName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "streetName": streetName[__i__]}]);
  
  
  }
  
  Future<void> set_streetNumber_batch(List<String> streetNumber) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_streetNumber_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "streetNumber": streetNumber[__i__]}]);
  
  
  }
  
  Future<void> set_adCode_batch(List<String> adCode) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_adCode_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "adCode": adCode[__i__]}]);
  
  
  }
  
  Future<void> set_countryCode_batch(List<String> countryCode) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_countryCode_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "countryCode": countryCode[__i__]}]);
  
  
  }
  
  Future<void> set_direction_batch(List<String> direction) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_direction_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "direction": direction[__i__]}]);
  
  
  }
  
  Future<void> set_distance_batch(List<String> distance) async {
    await MethodChannel('com.fluttify/bmap_core_fluttify').invokeMethod('BMKAddressComponent::set_distance_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "distance": distance[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}